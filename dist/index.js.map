{"mappings":"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","sources":["src/types.ts","src/create-functions.ts","src/reactivity/index.ts","src/template-engine/index.ts","src/state-manager/index.ts","src/router/index.ts"],"sourcesContent":["/* eslint-disable require-jsdoc */\nexport enum NodeTypes {\n    // eslint-disable-next-line no-unused-vars\n    textNode = 'TEXT_NODE',\n    // eslint-disable-next-line no-unused-vars\n    unitOfWork = 'UNIT_OF_WORK',\n    // eslint-disable-next-line no-unused-vars\n    funcNode = 'FUNC_NODE',\n    // eslint-disable-next-line no-unused-vars\n    compNode = 'COMP_NODE',\n}\n\nexport enum EffectTags {\n    // eslint-disable-next-line no-unused-vars\n    update = 'UPDATE',\n    // eslint-disable-next-line no-unused-vars\n    delete = 'DELETE',\n    // eslint-disable-next-line no-unused-vars\n    create = 'CREATE',\n}\n\n// how it looks like https://pomb.us/static/a88a3ec01855349c14302f6da28e2b0c/ac667/fiber1.png\nexport type FiberNode = {\n    // TODO: fix type\n    type: NodeTypes | string;\n    children: FiberNode[];\n    effectTag?: EffectTags;\n    dom?: HTMLElement | Text;\n    props?: PropsType;\n    parent?: FiberNode;\n    firstChild?: FiberNode;\n    sibling?: FiberNode;\n    previousCommittedRootNode?: FiberNode;\n    value?: string | Function;\n    hooks?: any[];\n    isClassComponent?: boolean;\n    parentComponent?: FiberNode;\n    componentName?: string;\n    componentInstance?: Component;\n};\n\nexport type PropsType = {[key: string]: any};\nexport type GlobalStateType = {\n    nodesToDeleteFromDom: FiberNode[];\n    // componentProps: PropsType\n    uncommitedRootNode: FiberNode | undefined;\n    currentRootNode: FiberNode | undefined;\n    wipNode: FiberNode | undefined;\n    hookIndex: number;\n    addNodeToQueue: Function;\n};\n\nexport type CompNode = {\n    type: string;\n    children: FiberNode[];\n    compConstructor: Function;\n    props: PropsType;\n    componentName: string;\n};\n\n// eslint-disable-next-line require-jsdoc\nexport class Component {\n    template!: string;\n    render(): FiberNode {\n        return {\n            type: '',\n            children: [],\n        };\n    }\n\n    constructor(public parentProps?: PropsType) {}\n}\n","import {\n    CompNode,\n    Component,\n    EffectTags,\n    FiberNode,\n    NodeTypes,\n    PropsType,\n} from './types';\n\n/**\n * Creating node containing only text\n * @param {string} text - text content for HTMLElement\n * @return {FiberNode} text node\n */\nexport function createTextNode(text: string): FiberNode {\n    const textNode: FiberNode = {\n        type: NodeTypes.textNode,\n        effectTag: EffectTags.create,\n        value: text,\n        children: [],\n    };\n    return textNode;\n}\n\n/**\n * Creating node containing only text\n * @param {Function} func - text content for HTMLElement\n * @return {FiberNode} text node\n */\nexport function createFuncNode(func: Function): FiberNode {\n    const functNode: FiberNode = {\n        type: NodeTypes.funcNode,\n        effectTag: EffectTags.create,\n        value: func,\n        children: [],\n    };\n    return functNode;\n}\n\n// eslint-disable-next-line require-jsdoc\nexport function createComponentNode(node: CompNode): FiberNode {\n    const functNode: FiberNode = {\n        type: NodeTypes.compNode,\n        effectTag: EffectTags.create,\n        value: node.compConstructor,\n        props: node.props,\n        componentName: node.componentName,\n        children: [],\n    };\n    return functNode;\n}\n\n/**\n *\n * @param {NodeTypes} type - type of node\n * @param {object} props - node properties\n * @param {Function} componentConstructor - constructor of class extending Component\n * @param {string} componentName - name of component\n * @param {FiberNode[]} children - node children\n * @return {FiberNode} - node instance\n */\nexport function createNode(\n    type: NodeTypes | string,\n    props: PropsType,\n    componentConstructor?: typeof Component,\n    componentName?: string,\n    ...children: (FiberNode | string | Function | CompNode)[]\n): FiberNode {\n    const node: FiberNode = {\n        type,\n        props,\n        value: componentConstructor,\n        componentName: componentName,\n        effectTag: EffectTags.create,\n        children: children.map(el => {\n            if (typeof el === 'string') {\n                return createTextNode(el);\n            } else if (typeof el === 'function') {\n                return createFuncNode(el);\n            } else if (\n                typeof el === 'object' &&\n                'componentName' in el &&\n                el.componentName\n            ) {\n                return createComponentNode(el as CompNode);\n            } else {\n                return el;\n            }\n        }),\n    };\n    return node;\n}\n\n/**\n * Create DOM object from Node interface instance\n * @param {FiberNode} node - fiber node instance\n * @return {HTMLElement} domNode\n */\nexport function createDomNode(node: FiberNode): HTMLElement | Text {\n    const joinedProps = {...node.props, ...getParentClassComponentProps(node)};\n    if (node.type === NodeTypes.textNode && node.value) {\n        const textDomNode = document.createTextNode(node.value as string);\n        return textDomNode;\n    }\n    if (\n        (node.type === NodeTypes.funcNode ||\n            node.type === NodeTypes.compNode) &&\n        node.value\n    ) {\n        const computedValue = (node.value as Function)(joinedProps);\n        // TODO: if computedValue contains component or arrays of component\n        // add them to parent node\n\n        const computedTextDomNode = document.createTextNode(computedValue);\n        return computedTextDomNode;\n    }\n\n    const domNode = document.createElement(node.type);\n    if (node.props) {\n        Object.entries(node.props).map(([propName, propValue]) => {\n            if (typeof propValue === 'string') {\n                domNode.setAttribute(propName, propValue);\n            }\n            // TODO: fix it\n            if (typeof propValue === 'function') {\n                (domNode as any)[propName] = () => propValue(joinedProps);\n            }\n        });\n    }\n\n    return domNode;\n}\n\n// eslint-disable-next-line require-jsdoc\nexport function getParentClassComponentProps(node: FiberNode) {\n    if (node.parentComponent) {\n        return node.parentComponent.props;\n    } else {\n        return node.props;\n    }\n}\n","import {createDomNode, getParentClassComponentProps} from '../create-functions';\nimport {Router} from '../router';\nimport {\n    Component,\n    EffectTags,\n    FiberNode,\n    GlobalStateType,\n    NodeTypes,\n    PropsType,\n} from '../types';\n\nconst queue: FiberNode[] = [];\nconst nodesToDeleteFromDom: FiberNode[] = [];\nlet router: Router | undefined;\nlet componentProps: PropsType = {};\nlet isWorking = false;\nconst globalState: GlobalStateType = {\n    nodesToDeleteFromDom: nodesToDeleteFromDom,\n    uncommitedRootNode: undefined,\n    currentRootNode: undefined,\n    wipNode: undefined,\n    hookIndex: 0,\n    addNodeToQueue: (node: FiberNode) => {\n        queue.push(node);\n        if (!isWorking) requestIdleCallback(runJobQueue);\n    },\n};\n\n// eslint-disable-next-line require-jsdoc\nfunction render(element: FiberNode, container: HTMLElement, props: PropsType) {\n    if (\n        element.value &&\n        typeof element.value === 'function' &&\n        element.value.prototype instanceof Component\n    ) {\n        globalState.uncommitedRootNode = {\n            // TODO: fix it\n            type: NodeTypes.unitOfWork,\n            dom: container,\n            effectTag: EffectTags.create,\n            children: [\n                {\n                    type: element.type,\n                    effectTag: EffectTags.create,\n                    children: element.children,\n                    value: element.value,\n                    props: element.props,\n                    componentName: element.componentName,\n                    isClassComponent: true,\n                },\n            ],\n            previousCommittedRootNode: globalState.currentRootNode,\n        };\n    } else {\n        globalState.uncommitedRootNode = {\n            // TODO: fix it\n            type: NodeTypes.unitOfWork,\n            dom: container,\n            value: element.value,\n            props: {...props, ...element.props},\n            effectTag: EffectTags.create,\n            children: element.children,\n            previousCommittedRootNode: globalState.currentRootNode,\n        };\n    }\n    globalState.uncommitedRootNode.parentComponent =\n        globalState.uncommitedRootNode;\n    componentProps = props;\n    componentProps.globalState = globalState;\n    const nextNode = globalState.uncommitedRootNode;\n    queue.push(nextNode);\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction workWithDom(node: FiberNode | undefined) {\n    if (!node || !node.parent) {\n        return;\n    }\n\n    let domParentNode = node.parent;\n    while (!domParentNode.dom) {\n        domParentNode = domParentNode.parent!;\n    }\n    const domParent = domParentNode.dom;\n\n    if (node.effectTag === EffectTags.create && node.dom) {\n        // TODO: check it\n        domParent.appendChild(node.dom);\n    }\n    if (node.effectTag === EffectTags.delete) {\n        commitDeletion(node, domParent);\n    }\n    if (node.effectTag === EffectTags.update) {\n        updateDomNode(node);\n    }\n    workWithDom(node.firstChild);\n    workWithDom(node.sibling);\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction commitDeletion(node: FiberNode, domParent: HTMLElement | Text) {\n    if (node.dom) {\n        domParent.removeChild(node.dom);\n    } else {\n        commitDeletion(node.firstChild!, domParent);\n    }\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction updateDomNode(node: FiberNode) {\n    if (node.type === NodeTypes.funcNode && !node.isClassComponent) {\n        const joinedProps = {\n            ...node.props,\n            ...getParentClassComponentProps(node),\n        };\n        const computedValue = (node.value as Function)(joinedProps);\n        if (\n            (typeof computedValue === 'string' ||\n                typeof computedValue === 'number') &&\n            node.dom &&\n            'data' in node.dom\n        ) {\n            if (computedValue !== node.dom.data) {\n                const newDomNode = document.createTextNode(\n                    computedValue.toString()\n                );\n                node.parent!.dom!.replaceChild(newDomNode, node.dom);\n                node.dom = newDomNode;\n            }\n        }\n    }\n\n    const isEvent = (key: string) => key.startsWith('on');\n    const isProperty = (key: string) => key !== 'children';\n    const isNew =\n        (prev: PropsType | undefined, next: PropsType | undefined) =>\n        (key: string) =>\n            (prev && next && prev[key] !== next[key]) || (!prev && next);\n    const isGone = (next: PropsType | undefined) => (key: string) =>\n        (next && !(key in next)) || !next;\n\n    const prevProps = node.previousCommittedRootNode!.props;\n    const currentProps = node.props;\n\n    if (prevProps) {\n        Object.keys(prevProps)\n            .filter(isEvent)\n            .filter(isNew(prevProps, currentProps))\n            .forEach(name => {\n                const eventType = name.toLowerCase().substring(2);\n                node.dom!.removeEventListener(eventType, prevProps[name]);\n            });\n\n        Object.keys(prevProps)\n            .filter(isProperty)\n            .filter(isGone(currentProps))\n            .forEach(propName => ((node.dom as any)[propName] = ''));\n    }\n    if (currentProps) {\n        Object.keys(currentProps)\n            .filter(isProperty)\n            .filter(isNew(prevProps, currentProps))\n            .forEach(propName => {\n                if (typeof currentProps[propName] === 'string') {\n                    (node.dom as any)[propName] = currentProps[propName];\n                }\n                if (typeof currentProps[propName] === 'function') {\n                    const joinedProps = {\n                        ...node.props,\n                        ...getParentClassComponentProps(node),\n                    };\n                    if (node.dom) {\n                        (node.dom as any)[propName] = (\n                            currentProps[propName] as Function\n                        )(joinedProps);\n                    }\n                }\n            });\n\n        Object.keys(currentProps)\n            .filter(isEvent)\n            .filter(isNew(prevProps, currentProps))\n            .forEach(name => {\n                const eventType = name.toLowerCase().substring(2);\n                node.dom!.addEventListener(eventType, currentProps[name]);\n            });\n    }\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction runJobQueue(deadline: IdleDeadline) {\n    let canRender = true;\n    while (canRender && queue.length > 0) {\n        isWorking = true;\n\n        const currentNode = queue[0];\n        queue.shift();\n        const nextNode = applyJob(currentNode);\n        if (nextNode) {\n            queue.push(nextNode);\n        }\n        canRender = deadline.timeRemaining() < 1;\n    }\n\n    if (queue.length) {\n        requestIdleCallback(runJobQueue);\n    } else if (globalState.uncommitedRootNode) {\n        isWorking = false;\n        nodesToDeleteFromDom.forEach(workWithDom);\n\n        // we need add root node to DOM separately of creating DOM element\n        // because it can take more time that we want\n        if (globalState.uncommitedRootNode.firstChild) {\n            workWithDom(globalState.uncommitedRootNode.firstChild);\n        }\n        let mainRootNode = globalState.uncommitedRootNode;\n        while (mainRootNode.parent && Object.keys(mainRootNode.parent).length) {\n            mainRootNode = mainRootNode.parent;\n        }\n        globalState.currentRootNode = mainRootNode;\n        globalState.uncommitedRootNode = undefined;\n\n        // if\n        if (document.body.style.display === 'none') {\n            document.body.style.display = 'block';\n            router!.push('/');\n        }\n    }\n}\n\n// how it works: https://pomb.us/static/19c304dcb3824b14722691ded539ecdb/ac667/fiber4.png\n// eslint-disable-next-line require-jsdoc\nfunction applyJob(node: FiberNode) {\n    const isClassComponent =\n        node.value &&\n        typeof node.value === 'function' &&\n        node.value.prototype instanceof Component;\n\n    if (isClassComponent) {\n        updateClassComponent(node);\n    } else {\n        updateHostComponent(node);\n    }\n\n    // if node has a child we should apply job to it\n    if (node.firstChild) {\n        return node.firstChild;\n    }\n\n    // else if node has a siblind we should apply job to it\n    // if node doesn't have a sibling nor child do nothing\n    let nextNode = node;\n    while (nextNode) {\n        if (nextNode.sibling) {\n            return nextNode.sibling;\n        }\n        // TODO: fix it\n        nextNode = nextNode.parent!;\n    }\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction updateHostComponent(node: FiberNode) {\n    if (!node.dom) {\n        node.dom = createDomNode(node);\n    }\n    updateChildrenNode(node, node.children);\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction updateClassComponent(node: FiberNode) {\n    globalState.hookIndex = 0;\n    globalState.wipNode = node;\n    globalState.wipNode.hooks =\n        globalState.wipNode.previousCommittedRootNode &&\n        globalState.wipNode.previousCommittedRootNode.hooks &&\n        Array.isArray(globalState.wipNode.previousCommittedRootNode.hooks)\n            ? [...globalState.wipNode.previousCommittedRootNode.hooks]\n            : [];\n    node.props = {...node.props, globalState};\n    const component = new (node.value! as typeof Component)(node.props);\n    node.children = node.children.length ? node.children : [component.render()];\n    node.isClassComponent = true;\n    node.parentComponent = node;\n    node.componentInstance = component;\n\n    if (router && Object.values(router.routes).includes(node.componentName!)) {\n        router.addComponentNode(node, node.componentName!);\n    }\n\n    updateChildrenNode(node, node.children);\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction updateChildrenNode(node: FiberNode, children: FiberNode[]) {\n    let index = 0;\n    let prevSibling: FiberNode | undefined;\n    let committedNode: FiberNode | undefined =\n        node.previousCommittedRootNode?.firstChild ?? undefined;\n\n    while (index < children.length || committedNode) {\n        let childNode = children[index];\n\n        if (committedNode && committedNode.type === childNode.type) {\n            // update node props\n            childNode = {\n                type: childNode.type,\n                effectTag: EffectTags.update,\n                props: childNode.props,\n                children: childNode.children,\n                firstChild: childNode.firstChild,\n                sibling: childNode.sibling,\n                value: childNode.value,\n                dom: committedNode.dom,\n                previousCommittedRootNode: committedNode,\n                parent: node,\n                isClassComponent: childNode.isClassComponent,\n                hooks: childNode.hooks,\n                componentInstance: childNode.componentInstance,\n            };\n            childNode.parentComponent =\n                childNode.parent && childNode.parent.isClassComponent\n                    ? childNode.parent\n                    : childNode.parent\n                    ? childNode.parent.parentComponent\n                    : childNode;\n        }\n        if (committedNode && committedNode.type !== childNode.type) {\n            // delete old node and add new node\n            committedNode.effectTag = EffectTags.delete;\n            nodesToDeleteFromDom.push(committedNode);\n            // TODO: check it\n            childNode = {\n                type: childNode.type,\n                effectTag: EffectTags.create,\n                props: childNode.props,\n                children: childNode.children,\n                value: childNode.value,\n                parent: node,\n                isClassComponent: childNode.isClassComponent,\n                firstChild: childNode.firstChild,\n                sibling: childNode.sibling,\n                hooks: childNode.hooks,\n                componentName: childNode.componentName,\n                componentInstance: childNode.componentInstance,\n            };\n            childNode.parentComponent =\n                childNode.parent && childNode.parent.isClassComponent\n                    ? childNode.parent\n                    : childNode.parent\n                    ? childNode.parent.parentComponent\n                    : childNode;\n        }\n        if (!committedNode && childNode) {\n            // add new node\n            childNode = {\n                type: childNode.type,\n                effectTag: EffectTags.create,\n                props: childNode.props,\n                children: childNode.children,\n                value: childNode.value,\n                parent: node,\n                hooks: childNode.hooks,\n                isClassComponent: childNode.isClassComponent,\n                componentName: childNode.componentName,\n                componentInstance: childNode.componentInstance,\n            };\n            childNode.parentComponent =\n                childNode.parent && childNode.parent.isClassComponent\n                    ? childNode.parent\n                    : childNode.parent\n                    ? childNode.parent.parentComponent\n                    : childNode;\n        }\n\n        if (committedNode) {\n            committedNode = committedNode.sibling;\n        }\n\n        if (childNode.type)\n            if (prevSibling) {\n                prevSibling!.sibling = childNode;\n            } else {\n                node.firstChild = childNode;\n            }\n\n        prevSibling = childNode;\n        children[index] = childNode;\n        index++;\n    }\n}\n\n// eslint-disable-next-line require-jsdoc\nexport function init(\n    element: FiberNode,\n    containerSelector: string,\n    props: PropsType,\n    routerObj?: Router\n) {\n    const domContainer: HTMLElement | null =\n        document.querySelector(containerSelector);\n    if (routerObj) {\n        router = routerObj;\n        // hide before router will select main component for '/' path\n        document.body.style.display = 'none';\n    }\n    if (domContainer) {\n        render(element, domContainer, props);\n        requestIdleCallback(runJobQueue);\n    } else {\n        throw new Error(\n            `Can't find element with selector ${containerSelector}`\n        );\n    }\n}\n","// import AppComponent from '../app'\nimport {createNode} from '../create-functions';\nimport {CompNode, Component, FiberNode, PropsType} from '../types';\n\ntype TagNodeType = {\n    type: 'self-closing' | 'element' | 'textValue' | 'funcValue' | 'component';\n    name: string;\n    length: number;\n    value: string | Function;\n    props: PropsType;\n    children: TagNodeType[];\n    isClosing?: boolean;\n    componentName?: string;\n};\n\n// eslint-disable-next-line require-jsdoc\nexport default function parseElement(\n    template: string,\n    lastOpenedTagName: string = '',\n    imports?: {[key: string]: typeof Component}\n) {\n    const openingTag = /^\\n*?[ \\t]*?<(\\w+)/;\n    const endOpeningTag = />/;\n\n    const node: TagNodeType = {\n        type: 'element',\n        name: '',\n        length: 0,\n        value: '',\n        props: {},\n        children: [],\n    };\n    let match = template.match(openingTag);\n    const closingTag = new RegExp(`[ \\t]*?</${lastOpenedTagName}>`);\n\n    if (!match) {\n        // if no opening tag we should find closing tag\n        // and between them parse value\n        match = template.match(closingTag);\n        if (!match) {\n            throw new Error('parsing error: no closing tag');\n        }\n        const nodeValue = parseValue(template.slice(0, match.index!).trim());\n        if (nodeValue.length === 0) {\n            node.value = '';\n        } else {\n            for (const childNodeContent of nodeValue) {\n                if (typeof childNodeContent === 'string') {\n                    node.children.push({\n                        type: 'textValue',\n                        name: '',\n                        value: childNodeContent,\n                        props: {},\n                        length: childNodeContent.length,\n                        children: [],\n                    });\n                } else {\n                    node.children.push({\n                        type: 'funcValue',\n                        name: '',\n                        value: childNodeContent,\n                        props: {},\n                        length: NaN,\n                        children: [],\n                    });\n                }\n            }\n        }\n        node.length = match.index! + match[0].length;\n        node.type = 'element';\n        node.isClosing = true;\n\n        return node;\n    }\n\n    let nodeLength = match.index! + match[0].length;\n    node.name = match[1];\n\n    template = template.slice(match.index! + match[0].length);\n\n    // find the end of opened tag\n    match = template.match(endOpeningTag);\n    if (!match) {\n        throw new Error('parsing error: no end of opening tag');\n    }\n\n    let templateCopy = template;\n    let cuttedSymbols = 0;\n    // check if we found '=>' in arrow function\n    while (match && templateCopy[match.index! - 1] === '=') {\n        templateCopy = templateCopy.slice(match!.index! + 1);\n        cuttedSymbols += match!.index! + 1;\n        match = templateCopy.match(endOpeningTag);\n    }\n\n    if (!match) {\n        throw new Error('parsing error: no end of opening tag');\n    }\n\n    nodeLength += match.index! + match[0].length + cuttedSymbols;\n    const propsStr = template.slice(0, match.index! + cuttedSymbols);\n\n    node.props = parseProps(propsStr);\n\n    // if self-closing tag\n    if (\n        template.slice(\n            match.index! + cuttedSymbols - 1,\n            match.index! + cuttedSymbols + 1\n        ) === '/>'\n    ) {\n        node.type = 'self-closing';\n        if (imports && node.name in imports) {\n            node.value = imports[node.name];\n            node.type = 'component';\n            node.componentName = node.name;\n        }\n        node.isClosing = true;\n        node.length = nodeLength;\n        return node;\n    }\n\n    // nodeLength += propsStr.length\n    template = template.slice(match.index! + cuttedSymbols + 1);\n\n    let childNode = parseElement(template, node.name, imports);\n    while (!(childNode.type === 'element' && childNode.isClosing)) {\n        template = template.slice(childNode.length);\n        node.children.push(childNode);\n        nodeLength += childNode.length;\n        childNode = parseElement(template, node.name, imports);\n    }\n\n    nodeLength += childNode.length;\n    if (childNode.value.length) {\n        node.children.push(childNode);\n    } else if (childNode.children.length) {\n        node.children.push(...childNode.children);\n    }\n    node.length = nodeLength;\n    return node;\n}\n\n// TODO: write it\n// (string | FiberNode)[]\n// eslint-disable-next-line require-jsdoc\nfunction parseValue(str: string) {\n    const curlyBracets = /{[^}]*}/;\n    let match = str.match(curlyBracets);\n    const children: (string | Function)[] = [];\n    while (match) {\n        const prevTextNode = str.slice(0, match.index!);\n        if (prevTextNode.length) {\n            children.push(prevTextNode);\n        }\n        const funcNodeStr = str\n            .slice(match.index! + 1, match.index! + match[0].length - 1)\n            .trim();\n        const funcNode = createFuncValue(funcNodeStr);\n        children.push(funcNode);\n        str = str.slice(match.index! + match[0].length);\n        match = str.match(curlyBracets);\n    }\n    if (str.length) {\n        children.push(str);\n    }\n    return children;\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction parseProps(str: string) {\n    const props: PropsType = {};\n    // regex to get attributes from tag\n    const matchNextProp = () =>\n        str.match(/ *\\w+=\\\".+?(?=\")\"/) || str.match(/ *\\w+/);\n\n    let match = matchNextProp();\n    if (!match) {\n        return props;\n    }\n\n    while (match) {\n        const propStr = match[0];\n        let [propKey, ...propValues] = propStr.split('=');\n        propKey = propKey.trim();\n        let propValue: string | boolean | Function = propValues.join('=');\n        propValue =\n            typeof propValue === 'string' && propValue.length\n                ? propValue.slice(1, -1)\n                : true;\n        const curlyBracets = /{.*}/;\n\n        if (typeof propValue === 'string') {\n            const bracetsMatch = propValue.match(curlyBracets);\n            if (bracetsMatch) {\n                propValue = createFuncValue(bracetsMatch[0].slice(1, -1));\n            }\n        }\n        props[propKey] = propValue;\n        str =\n            str.slice(0, match.index) +\n            str.slice(match.index! + propStr.length);\n        match = matchNextProp();\n    }\n\n    return props;\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction createFuncValue(str: string) {\n    return new Function('props', `return ${str}`);\n}\n\n// eslint-disable-next-line require-jsdoc\nfunction convertTagNodeToFiberNode(tagNode: TagNodeType): FiberNode {\n    // if tag node has a value it means that node is component\n    let componentConstructor: typeof Component | undefined;\n    if (tagNode.type === 'component' && tagNode.value) {\n        componentConstructor = tagNode.value as typeof Component;\n    }\n    const convertedNode = {\n        type: tagNode.name,\n        props: tagNode.props,\n        value: componentConstructor,\n        componentName: tagNode.componentName,\n        children: tagNode.children.map((node: TagNodeType) =>\n            ['funcValue', 'textValue'].includes(node.type)\n                ? node.value\n                : node.type === 'component'\n                ? ({\n                      compConstructor: node.value,\n                      props: node.props,\n                      componentName: node.componentName,\n                  } as CompNode)\n                : convertTagNodeToFiberNode(node)\n        ),\n    };\n    const rootNode = createNode(\n        convertedNode.type,\n        convertedNode.props,\n        componentConstructor,\n        convertedNode.componentName,\n        ...convertedNode.children\n    );\n    return rootNode;\n}\n\n// example of template\n// const templateStr = `<template id=\"app\" visible>\n//     <div>\n//         <h1>Hello, {props.name} {props.surname}, nice to meet you</h1>\n//         <div>\n//             <div>\n//                 <ul>\n//                     <li>1</li>\n//                     <li>2</li>\n//                     <li>3</li>\n//                     <li>4</li>\n//                 </ul>\n//             </div>\n//         </div>\n//     </div>\n//     <a href=\"https://google.com\">\n//         <img src=\"john.png\" alt=\"John's face\"/>\n//     </a>\n// </template>\n// `\n\n// eslint-disable-next-line require-jsdoc\nexport function parseTemplate(\n    template: string,\n    imports?: {[key: string]: typeof Component}\n): FiberNode {\n    const rootNode = parseElement(template, '', imports);\n    const rootFiberNode = convertTagNodeToFiberNode(rootNode);\n    return rootFiberNode;\n}\n\n// const templateStr = `\n// <div><App props=\"{props}\" /></div>\n// `\n","import {FiberNode, GlobalStateType} from '../types';\n\n// eslint-disable-next-line require-jsdoc\nexport function useState(initial: any, globalState: GlobalStateType) {\n    const actionsQueue: Function[] = [];\n    const oldHook =\n        globalState.wipNode!.previousCommittedRootNode &&\n        globalState.wipNode!.previousCommittedRootNode.hooks &&\n        globalState.wipNode!.previousCommittedRootNode.hooks[\n            globalState.hookIndex\n        ];\n\n    const hook = {\n        state: oldHook ? oldHook.state : initial,\n        queue: actionsQueue,\n    };\n\n    const actions = oldHook ? oldHook.queue : [];\n    actions.forEach((action: Function) => {\n        hook.state = action(hook.state);\n    });\n\n    const setState = (action: Function) => {\n        hook.queue.push(action);\n        globalState.uncommitedRootNode = {\n            type: globalState.wipNode!.type,\n            children: globalState.wipNode!.children,\n            dom: globalState.wipNode!.dom,\n            props: globalState.wipNode!.props,\n            value: globalState.wipNode!.value,\n            previousCommittedRootNode: globalState.wipNode!,\n            parent: globalState.wipNode!.parent,\n            firstChild: globalState.wipNode!.firstChild,\n            parentComponent: globalState.wipNode!.parentComponent,\n        };\n\n        globalState.addNodeToQueue(globalState.uncommitedRootNode as FiberNode);\n        globalState.nodesToDeleteFromDom = [];\n    };\n\n    globalState.wipNode!.hooks!.push(hook);\n    globalState.hookIndex++;\n    return [hook.state, setState];\n}\n","import {FiberNode} from '../types';\n\n// eslint-disable-next-line require-jsdoc\nexport class Router {\n    routes: {[key: string]: string} = {};\n    history: {[key: string]: string}[] = [];\n    private componentNodes: {[key: string]: FiberNode} = {};\n\n    // eslint-disable-next-line require-jsdoc\n    constructor(routes: {[key: string]: string}) {\n        window.addEventListener('popstate', event => {\n            const routeLink = event.state.routeLink;\n            this.showMainComponent(routeLink);\n        });\n        this.routes = routes;\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    push(routeLink: string) {\n        window.history.pushState({routeLink}, `${routeLink}`, routeLink);\n        this.showMainComponent(routeLink);\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    showMainComponent(routeLink: string) {\n        const selectedComponentName = this.routes[routeLink];\n        for (const childNode of this.componentNodes[selectedComponentName]\n            .children) {\n            if (childNode.dom instanceof HTMLElement) {\n                childNode.dom.style.display = 'block';\n            }\n        }\n\n        for (const compName of Object.keys(this.componentNodes)) {\n            if (compName === selectedComponentName) {\n                continue;\n            }\n\n            for (const childNode of this.componentNodes[compName].children) {\n                if (childNode.dom instanceof HTMLElement) {\n                    childNode.dom.style.display = 'none';\n                }\n            }\n        }\n    }\n\n    // eslint-disable-next-line require-jsdoc\n    addComponentNode(node: FiberNode, componentName: string) {\n        this.componentNodes[componentName] = node;\n    }\n}\n"],"names":["$a3bd0ee6ac54316e$export$2ed9472effad1b70","$a3bd0ee6ac54316e$export$ea8d20c92e194fd2","$a3bd0ee6ac54316e$export$16fa2f45be04daa8","render","type","children","constructor","parentProps","$55be18d6069aa5b3$export$b2ce9ad90858ed7a","text","textNode","effectTag","create","value","$55be18d6069aa5b3$export$799c61d34e780353","func","funcNode","$55be18d6069aa5b3$export$fefd1e69396ee10d","node","compNode","compConstructor","props","componentName","$55be18d6069aa5b3$export$270e7ba5936d3c48","componentConstructor","map","el","$55be18d6069aa5b3$export$34d901be6c9525f9","joinedProps","$55be18d6069aa5b3$export$d74f66a29f3b4c2c","document","createTextNode","computedValue","domNode","createElement","Object","entries","propName","propValue","setAttribute","parentComponent","$b299070594314c58$var$queue","$b299070594314c58$var$nodesToDeleteFromDom","$b299070594314c58$var$router","$b299070594314c58$var$componentProps","$b299070594314c58$var$isWorking","$b299070594314c58$var$globalState","nodesToDeleteFromDom","uncommitedRootNode","undefined","currentRootNode","wipNode","hookIndex","addNodeToQueue","push","requestIdleCallback","$b299070594314c58$var$runJobQueue","$b299070594314c58$var$workWithDom","parent","domParentNode","dom","domParent","appendChild","delete","$b299070594314c58$var$commitDeletion","update","isClassComponent","data","newDomNode","toString","replaceChild","isEvent","key","startsWith","isProperty","isNew","prev","next","isGone","prevProps","previousCommittedRootNode","currentProps","keys","filter","forEach","name","eventType","toLowerCase","substring","removeEventListener","addEventListener","$b299070594314c58$var$updateDomNode","firstChild","sibling","removeChild","deadline","canRender","length","currentNode","shift","nextNode","$b299070594314c58$var$applyJob","timeRemaining","mainRootNode","body","style","display","prototype","hooks","Array","isArray","component","componentInstance","values","routes","includes","addComponentNode","$b299070594314c58$var$updateChildrenNode","$b299070594314c58$var$updateClassComponent","$b299070594314c58$var$updateHostComponent","prevSibling","index","committedNode","childNode","$b299070594314c58$export$2cd8252107eb640b","element","containerSelector","routerObj","domContainer","querySelector","Error","container","unitOfWork","globalState","$b299070594314c58$var$render","$9a7fff7dae3bc9a8$export$2e2bcd8739ae039","template","lastOpenedTagName","imports","endOpeningTag","match","closingTag","RegExp","nodeValue","str","curlyBracets","prevTextNode","slice","$9a7fff7dae3bc9a8$var$createFuncValue","trim","$9a7fff7dae3bc9a8$var$parseValue","childNodeContent","NaN","isClosing","nodeLength","templateCopy","cuttedSymbols","propsStr","matchNextProp","propStr","propKey","propValues","split","join","bracetsMatch","$9a7fff7dae3bc9a8$var$parseProps","Function","$9a7fff7dae3bc9a8$var$convertTagNodeToFiberNode","tagNode","convertedNode","$9a7fff7dae3bc9a8$export$2e2dbd43b49fd373","$4ab241499526e26d$export$60241385465d0a34","initial","oldHook","hook","state","queue","action","$092ce52c8f5b3b83$export$55185c17a0fcbe46","history","componentNodes","window","event","routeLink","this","showMainComponent","pushState","selectedComponentName","HTMLElement","compName"],"version":3,"file":"index.js.map"}